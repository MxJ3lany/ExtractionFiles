
// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     media/mojo/interfaces/media_types.mojom
//

package org.chromium.media.mojom;

import org.chromium.base.annotations.SuppressFBWarnings;
import org.chromium.mojo.bindings.DeserializationException;


public final class VideoFrameData extends org.chromium.mojo.bindings.Union {

    public static final class Tag {
        public static final int SharedBufferData = 0;
        public static final int MailboxData = 1;
    };

    private int mTag_ = -1;
    private SharedBufferVideoFrameData mSharedBufferData;
    private MailboxVideoFrameData mMailboxData;

    public int which() {
      return mTag_;
    }

    public boolean isUnknown() {
      return mTag_ == -1;
    }

    // TODO(rockot): Fix the findbugs error and remove this suppression.
    // See http://crbug.com/570386.
    @SuppressFBWarnings("EI_EXPOSE_REP2")
    public void setSharedBufferData(SharedBufferVideoFrameData sharedBufferData) {
        mTag_ = Tag.SharedBufferData;
        mSharedBufferData = sharedBufferData;
    }

    // TODO(rockot): Fix the findbugs error and remove this suppression.
    // See http://crbug.com/570386.
    @SuppressFBWarnings("EI_EXPOSE_REP")
    public SharedBufferVideoFrameData getSharedBufferData() {
        assert mTag_ == Tag.SharedBufferData;
        return mSharedBufferData;
    }

    // TODO(rockot): Fix the findbugs error and remove this suppression.
    // See http://crbug.com/570386.
    @SuppressFBWarnings("EI_EXPOSE_REP2")
    public void setMailboxData(MailboxVideoFrameData mailboxData) {
        mTag_ = Tag.MailboxData;
        mMailboxData = mailboxData;
    }

    // TODO(rockot): Fix the findbugs error and remove this suppression.
    // See http://crbug.com/570386.
    @SuppressFBWarnings("EI_EXPOSE_REP")
    public MailboxVideoFrameData getMailboxData() {
        assert mTag_ == Tag.MailboxData;
        return mMailboxData;
    }


    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder0, int offset) {
        encoder0.encode(org.chromium.mojo.bindings.BindingsHelper.UNION_SIZE, offset);
        encoder0.encode(mTag_, offset + 4);
        switch (mTag_) {
            case Tag.SharedBufferData: {
                
                encoder0.encode(mSharedBufferData, offset + 8, false);
                break;
            }
            case Tag.MailboxData: {
                
                encoder0.encode(mMailboxData, offset + 8, false);
                break;
            }
            default: {
                break;
            }
        }
    }

    public static VideoFrameData deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message).decoderForSerializedUnion(), 0);
    }

    public static final VideoFrameData decode(org.chromium.mojo.bindings.Decoder decoder0, int offset) {
        org.chromium.mojo.bindings.DataHeader dataHeader = decoder0.readDataHeaderForUnion(offset);
        if (dataHeader.size == 0) {
            return null;
        }
        VideoFrameData result = new VideoFrameData();
        switch (dataHeader.elementsOrVersion) {
            case Tag.SharedBufferData: {
                
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(offset + org.chromium.mojo.bindings.DataHeader.HEADER_SIZE, false);
                result.mSharedBufferData = SharedBufferVideoFrameData.decode(decoder1);
                result.mTag_ = Tag.SharedBufferData;
                break;
            }
            case Tag.MailboxData: {
                
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(offset + org.chromium.mojo.bindings.DataHeader.HEADER_SIZE, false);
                result.mMailboxData = MailboxVideoFrameData.decode(decoder1);
                result.mTag_ = Tag.MailboxData;
                break;
            }
            default: {
                break;
            }
        }
        return result;
    }

    /**
     * @see Object#equals(Object)
     */
    @Override
    public boolean equals(Object object) {
        if (object == this)
            return true;
        if (object == null)
            return false;
        if (getClass() != object.getClass())
            return false;
        VideoFrameData other = (VideoFrameData) object;
        if (mTag_ != other.mTag_)
            return false;
        switch (mTag_) {
            case Tag.SharedBufferData:
                return org.chromium.mojo.bindings.BindingsHelper.equals(mSharedBufferData, other.mSharedBufferData);
            case Tag.MailboxData:
                return org.chromium.mojo.bindings.BindingsHelper.equals(mMailboxData, other.mMailboxData);
            default:
                break;
        }
        return false;
    }

    /**
     * @see Object#hashCode()
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = prime + getClass().hashCode();
        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(mTag_);
        switch (mTag_) {
            case Tag.SharedBufferData: {
                result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(mSharedBufferData);
                break;
            }
            case Tag.MailboxData: {
                result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(mMailboxData);
                break;
            }
            default: {
                break;
            }
        }
        return result;
    }
}