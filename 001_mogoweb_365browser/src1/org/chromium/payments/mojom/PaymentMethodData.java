
// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     components/payments/mojom/payment_request.mojom
//

package org.chromium.payments.mojom;

import org.chromium.base.annotations.SuppressFBWarnings;
import org.chromium.mojo.bindings.DeserializationException;


public final class PaymentMethodData extends org.chromium.mojo.bindings.Struct {

    private static final int STRUCT_SIZE = 88;
    private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(88, 0)};
    private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    public String[] supportedMethods;
    public String stringifiedData;
    public int environment;
    public String merchantName;
    public String merchantId;
    public int[] allowedCardNetworks;
    public int tokenizationType;
    public AndroidPayTokenizationParameter[] parameters;
    public int minGooglePlayServicesVersion;
    public int[] supportedNetworks;
    public int[] supportedTypes;

    private PaymentMethodData(int version) {
        super(STRUCT_SIZE, version);
    }

    public PaymentMethodData() {
        this(0);
    }

    public static PaymentMethodData deserialize(org.chromium.mojo.bindings.Message message) {
        return decode(new org.chromium.mojo.bindings.Decoder(message));
    }

    /**
     * Similar to the method above, but deserializes from a |ByteBuffer| instance.
     *
     * @throws org.chromium.mojo.bindings.DeserializationException on deserialization failure.
     */
    public static PaymentMethodData deserialize(java.nio.ByteBuffer data) {
        if (data == null)
            return null;

        return deserialize(new org.chromium.mojo.bindings.Message(
                data, new java.util.ArrayList<org.chromium.mojo.system.Handle>()));
    }

    @SuppressWarnings("unchecked")
    public static PaymentMethodData decode(org.chromium.mojo.bindings.Decoder decoder0) {
        if (decoder0 == null) {
            return null;
        }
        decoder0.increaseStackDepth();
        PaymentMethodData result;
        try {
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            result = new PaymentMethodData(mainDataHeader.elementsOrVersion);
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                {
                    org.chromium.mojo.bindings.DataHeader si1 = decoder1.readDataHeaderForPointerArray(org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                    result.supportedMethods = new String[si1.elementsOrVersion];
                    for (int i1 = 0; i1 < si1.elementsOrVersion; ++i1) {
                        
                        result.supportedMethods[i1] = decoder1.readString(org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i1, false);
                    }
                }
            }
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                result.stringifiedData = decoder0.readString(16, false);
            }
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                result.environment = decoder0.readInt(24);
                    AndroidPayEnvironment.validate(result.environment);
            }
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                result.tokenizationType = decoder0.readInt(28);
                    AndroidPayTokenization.validate(result.tokenizationType);
            }
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                result.merchantName = decoder0.readString(32, true);
            }
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                result.merchantId = decoder0.readString(40, true);
            }
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                result.allowedCardNetworks = decoder0.readInts(48, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                {
                    for (int i0 = 0; i0 < result.allowedCardNetworks.length; ++i0) {
                        AndroidPayCardNetwork.validate(result.allowedCardNetworks[i0]);
                    }
                }
            }
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(56, false);
                {
                    org.chromium.mojo.bindings.DataHeader si1 = decoder1.readDataHeaderForPointerArray(org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                    result.parameters = new AndroidPayTokenizationParameter[si1.elementsOrVersion];
                    for (int i1 = 0; i1 < si1.elementsOrVersion; ++i1) {
                        
                        org.chromium.mojo.bindings.Decoder decoder2 = decoder1.readPointer(org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i1, false);
                        result.parameters[i1] = AndroidPayTokenizationParameter.decode(decoder2);
                    }
                }
            }
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                result.minGooglePlayServicesVersion = decoder0.readInt(64);
            }
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                result.supportedNetworks = decoder0.readInts(72, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                {
                    for (int i0 = 0; i0 < result.supportedNetworks.length; ++i0) {
                        BasicCardNetwork.validate(result.supportedNetworks[i0]);
                    }
                }
            }
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                result.supportedTypes = decoder0.readInts(80, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                {
                    for (int i0 = 0; i0 < result.supportedTypes.length; ++i0) {
                        BasicCardType.validate(result.supportedTypes[i0]);
                    }
                }
            }
        } finally {
            decoder0.decreaseStackDepth();
        }
        return result;
    }

    @SuppressWarnings("unchecked")
    @Override
    protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
        org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
        
        if (supportedMethods == null) {
            encoder0.encodeNullPointer(8, false);
        } else {
            org.chromium.mojo.bindings.Encoder encoder1 = encoder0.encodePointerArray(supportedMethods.length, 8, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            for (int i0 = 0; i0 < supportedMethods.length; ++i0) {
                
                encoder1.encode(supportedMethods[i0], org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i0, false);
            }
        }
        
        encoder0.encode(stringifiedData, 16, false);
        
        encoder0.encode(environment, 24);
        
        encoder0.encode(tokenizationType, 28);
        
        encoder0.encode(merchantName, 32, true);
        
        encoder0.encode(merchantId, 40, true);
        
        encoder0.encode(allowedCardNetworks, 48, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
        
        if (parameters == null) {
            encoder0.encodeNullPointer(56, false);
        } else {
            org.chromium.mojo.bindings.Encoder encoder1 = encoder0.encodePointerArray(parameters.length, 56, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
            for (int i0 = 0; i0 < parameters.length; ++i0) {
                
                encoder1.encode(parameters[i0], org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i0, false);
            }
        }
        
        encoder0.encode(minGooglePlayServicesVersion, 64);
        
        encoder0.encode(supportedNetworks, 72, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
        
        encoder0.encode(supportedTypes, 80, org.chromium.mojo.bindings.BindingsHelper.NOTHING_NULLABLE, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
    }

    /**
     * @see Object#equals(Object)
     */
    @Override
    public boolean equals(Object object) {
        if (object == this)
            return true;
        if (object == null)
            return false;
        if (getClass() != object.getClass())
            return false;
        PaymentMethodData other = (PaymentMethodData) object;
        if (!java.util.Arrays.deepEquals(this.supportedMethods, other.supportedMethods))
            return false;
        if (!org.chromium.mojo.bindings.BindingsHelper.equals(this.stringifiedData, other.stringifiedData))
            return false;
        if (this.environment!= other.environment)
            return false;
        if (!org.chromium.mojo.bindings.BindingsHelper.equals(this.merchantName, other.merchantName))
            return false;
        if (!org.chromium.mojo.bindings.BindingsHelper.equals(this.merchantId, other.merchantId))
            return false;
        if (!java.util.Arrays.equals(this.allowedCardNetworks, other.allowedCardNetworks))
            return false;
        if (this.tokenizationType!= other.tokenizationType)
            return false;
        if (!java.util.Arrays.deepEquals(this.parameters, other.parameters))
            return false;
        if (this.minGooglePlayServicesVersion!= other.minGooglePlayServicesVersion)
            return false;
        if (!java.util.Arrays.equals(this.supportedNetworks, other.supportedNetworks))
            return false;
        if (!java.util.Arrays.equals(this.supportedTypes, other.supportedTypes))
            return false;
        return true;
    }

    /**
     * @see Object#hashCode()
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = prime + getClass().hashCode();
        result = prime * result + java.util.Arrays.deepHashCode(supportedMethods);
        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(stringifiedData);
        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(environment);
        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(merchantName);
        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(merchantId);
        result = prime * result + java.util.Arrays.hashCode(allowedCardNetworks);
        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(tokenizationType);
        result = prime * result + java.util.Arrays.deepHashCode(parameters);
        result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(minGooglePlayServicesVersion);
        result = prime * result + java.util.Arrays.hashCode(supportedNetworks);
        result = prime * result + java.util.Arrays.hashCode(supportedTypes);
        return result;
    }
}