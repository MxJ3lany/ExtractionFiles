// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StickerResources.proto

package org.whispersystems.signalservice.internal.sticker;

public final class StickerProtos {
  private StickerProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string title = 1;
    /**
     * <code>optional string title = 1;</code>
     */
    boolean hasTitle();
    /**
     * <code>optional string title = 1;</code>
     */
    java.lang.String getTitle();
    /**
     * <code>optional string title = 1;</code>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    // optional string author = 2;
    /**
     * <code>optional string author = 2;</code>
     */
    boolean hasAuthor();
    /**
     * <code>optional string author = 2;</code>
     */
    java.lang.String getAuthor();
    /**
     * <code>optional string author = 2;</code>
     */
    com.google.protobuf.ByteString
        getAuthorBytes();

    // optional .signalservice.Pack.Sticker cover = 3;
    /**
     * <code>optional .signalservice.Pack.Sticker cover = 3;</code>
     */
    boolean hasCover();
    /**
     * <code>optional .signalservice.Pack.Sticker cover = 3;</code>
     */
    org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker getCover();
    /**
     * <code>optional .signalservice.Pack.Sticker cover = 3;</code>
     */
    org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.StickerOrBuilder getCoverOrBuilder();

    // repeated .signalservice.Pack.Sticker stickers = 4;
    /**
     * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
     */
    java.util.List<org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker> 
        getStickersList();
    /**
     * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
     */
    org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker getStickers(int index);
    /**
     * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
     */
    int getStickersCount();
    /**
     * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
     */
    java.util.List<? extends org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.StickerOrBuilder> 
        getStickersOrBuilderList();
    /**
     * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
     */
    org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.StickerOrBuilder getStickersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code signalservice.Pack}
   */
  public static final class Pack extends
      com.google.protobuf.GeneratedMessage
      implements PackOrBuilder {
    // Use Pack.newBuilder() to construct.
    private Pack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Pack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Pack defaultInstance;
    public static Pack getDefaultInstance() {
      return defaultInstance;
    }

    public Pack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Pack(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              title_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              author_ = input.readBytes();
              break;
            }
            case 26: {
              org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = cover_.toBuilder();
              }
              cover_ = input.readMessage(org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cover_);
                cover_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                stickers_ = new java.util.ArrayList<org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker>();
                mutable_bitField0_ |= 0x00000008;
              }
              stickers_.add(input.readMessage(org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          stickers_ = java.util.Collections.unmodifiableList(stickers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.whispersystems.signalservice.internal.sticker.StickerProtos.internal_static_signalservice_Pack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.whispersystems.signalservice.internal.sticker.StickerProtos.internal_static_signalservice_Pack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.class, org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Builder.class);
    }

    public static com.google.protobuf.Parser<Pack> PARSER =
        new com.google.protobuf.AbstractParser<Pack>() {
      public Pack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Pack(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Pack> getParserForType() {
      return PARSER;
    }

    public interface StickerOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional uint32 id = 1;
      /**
       * <code>optional uint32 id = 1;</code>
       */
      boolean hasId();
      /**
       * <code>optional uint32 id = 1;</code>
       */
      int getId();

      // optional string emoji = 2;
      /**
       * <code>optional string emoji = 2;</code>
       */
      boolean hasEmoji();
      /**
       * <code>optional string emoji = 2;</code>
       */
      java.lang.String getEmoji();
      /**
       * <code>optional string emoji = 2;</code>
       */
      com.google.protobuf.ByteString
          getEmojiBytes();
    }
    /**
     * Protobuf type {@code signalservice.Pack.Sticker}
     */
    public static final class Sticker extends
        com.google.protobuf.GeneratedMessage
        implements StickerOrBuilder {
      // Use Sticker.newBuilder() to construct.
      private Sticker(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Sticker(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Sticker defaultInstance;
      public static Sticker getDefaultInstance() {
        return defaultInstance;
      }

      public Sticker getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Sticker(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                id_ = input.readUInt32();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                emoji_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.whispersystems.signalservice.internal.sticker.StickerProtos.internal_static_signalservice_Pack_Sticker_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.whispersystems.signalservice.internal.sticker.StickerProtos.internal_static_signalservice_Pack_Sticker_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.class, org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.Builder.class);
      }

      public static com.google.protobuf.Parser<Sticker> PARSER =
          new com.google.protobuf.AbstractParser<Sticker>() {
        public Sticker parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Sticker(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Sticker> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional uint32 id = 1;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_;
      /**
       * <code>optional uint32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }

      // optional string emoji = 2;
      public static final int EMOJI_FIELD_NUMBER = 2;
      private java.lang.Object emoji_;
      /**
       * <code>optional string emoji = 2;</code>
       */
      public boolean hasEmoji() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string emoji = 2;</code>
       */
      public java.lang.String getEmoji() {
        java.lang.Object ref = emoji_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            emoji_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string emoji = 2;</code>
       */
      public com.google.protobuf.ByteString
          getEmojiBytes() {
        java.lang.Object ref = emoji_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          emoji_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        id_ = 0;
        emoji_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getEmojiBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getEmojiBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code signalservice.Pack.Sticker}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.StickerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.whispersystems.signalservice.internal.sticker.StickerProtos.internal_static_signalservice_Pack_Sticker_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.whispersystems.signalservice.internal.sticker.StickerProtos.internal_static_signalservice_Pack_Sticker_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.class, org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.Builder.class);
        }

        // Construct using org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          emoji_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.whispersystems.signalservice.internal.sticker.StickerProtos.internal_static_signalservice_Pack_Sticker_descriptor;
        }

        public org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker getDefaultInstanceForType() {
          return org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.getDefaultInstance();
        }

        public org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker build() {
          org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker buildPartial() {
          org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker result = new org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.emoji_ = emoji_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker) {
            return mergeFrom((org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker other) {
          if (other == org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasEmoji()) {
            bitField0_ |= 0x00000002;
            emoji_ = other.emoji_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional uint32 id = 1;
        private int id_ ;
        /**
         * <code>optional uint32 id = 1;</code>
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 id = 1;</code>
         */
        public int getId() {
          return id_;
        }
        /**
         * <code>optional uint32 id = 1;</code>
         */
        public Builder setId(int value) {
          bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 id = 1;</code>
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          onChanged();
          return this;
        }

        // optional string emoji = 2;
        private java.lang.Object emoji_ = "";
        /**
         * <code>optional string emoji = 2;</code>
         */
        public boolean hasEmoji() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string emoji = 2;</code>
         */
        public java.lang.String getEmoji() {
          java.lang.Object ref = emoji_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            emoji_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string emoji = 2;</code>
         */
        public com.google.protobuf.ByteString
            getEmojiBytes() {
          java.lang.Object ref = emoji_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            emoji_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string emoji = 2;</code>
         */
        public Builder setEmoji(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          emoji_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string emoji = 2;</code>
         */
        public Builder clearEmoji() {
          bitField0_ = (bitField0_ & ~0x00000002);
          emoji_ = getDefaultInstance().getEmoji();
          onChanged();
          return this;
        }
        /**
         * <code>optional string emoji = 2;</code>
         */
        public Builder setEmojiBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          emoji_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:signalservice.Pack.Sticker)
      }

      static {
        defaultInstance = new Sticker(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:signalservice.Pack.Sticker)
    }

    private int bitField0_;
    // optional string title = 1;
    public static final int TITLE_FIELD_NUMBER = 1;
    private java.lang.Object title_;
    /**
     * <code>optional string title = 1;</code>
     */
    public boolean hasTitle() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string title = 1;</code>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          title_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string title = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string author = 2;
    public static final int AUTHOR_FIELD_NUMBER = 2;
    private java.lang.Object author_;
    /**
     * <code>optional string author = 2;</code>
     */
    public boolean hasAuthor() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string author = 2;</code>
     */
    public java.lang.String getAuthor() {
      java.lang.Object ref = author_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          author_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string author = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAuthorBytes() {
      java.lang.Object ref = author_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        author_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .signalservice.Pack.Sticker cover = 3;
    public static final int COVER_FIELD_NUMBER = 3;
    private org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker cover_;
    /**
     * <code>optional .signalservice.Pack.Sticker cover = 3;</code>
     */
    public boolean hasCover() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .signalservice.Pack.Sticker cover = 3;</code>
     */
    public org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker getCover() {
      return cover_;
    }
    /**
     * <code>optional .signalservice.Pack.Sticker cover = 3;</code>
     */
    public org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.StickerOrBuilder getCoverOrBuilder() {
      return cover_;
    }

    // repeated .signalservice.Pack.Sticker stickers = 4;
    public static final int STICKERS_FIELD_NUMBER = 4;
    private java.util.List<org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker> stickers_;
    /**
     * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
     */
    public java.util.List<org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker> getStickersList() {
      return stickers_;
    }
    /**
     * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
     */
    public java.util.List<? extends org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.StickerOrBuilder> 
        getStickersOrBuilderList() {
      return stickers_;
    }
    /**
     * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
     */
    public int getStickersCount() {
      return stickers_.size();
    }
    /**
     * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
     */
    public org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker getStickers(int index) {
      return stickers_.get(index);
    }
    /**
     * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
     */
    public org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.StickerOrBuilder getStickersOrBuilder(
        int index) {
      return stickers_.get(index);
    }

    private void initFields() {
      title_ = "";
      author_ = "";
      cover_ = org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.getDefaultInstance();
      stickers_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTitleBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getAuthorBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, cover_);
      }
      for (int i = 0; i < stickers_.size(); i++) {
        output.writeMessage(4, stickers_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTitleBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getAuthorBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, cover_);
      }
      for (int i = 0; i < stickers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, stickers_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code signalservice.Pack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.whispersystems.signalservice.internal.sticker.StickerProtos.PackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.whispersystems.signalservice.internal.sticker.StickerProtos.internal_static_signalservice_Pack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.whispersystems.signalservice.internal.sticker.StickerProtos.internal_static_signalservice_Pack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.class, org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Builder.class);
      }

      // Construct using org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCoverFieldBuilder();
          getStickersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        title_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        author_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (coverBuilder_ == null) {
          cover_ = org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.getDefaultInstance();
        } else {
          coverBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (stickersBuilder_ == null) {
          stickers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          stickersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.whispersystems.signalservice.internal.sticker.StickerProtos.internal_static_signalservice_Pack_descriptor;
      }

      public org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack getDefaultInstanceForType() {
        return org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.getDefaultInstance();
      }

      public org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack build() {
        org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack buildPartial() {
        org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack result = new org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.title_ = title_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.author_ = author_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (coverBuilder_ == null) {
          result.cover_ = cover_;
        } else {
          result.cover_ = coverBuilder_.build();
        }
        if (stickersBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            stickers_ = java.util.Collections.unmodifiableList(stickers_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.stickers_ = stickers_;
        } else {
          result.stickers_ = stickersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack) {
          return mergeFrom((org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack other) {
        if (other == org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.getDefaultInstance()) return this;
        if (other.hasTitle()) {
          bitField0_ |= 0x00000001;
          title_ = other.title_;
          onChanged();
        }
        if (other.hasAuthor()) {
          bitField0_ |= 0x00000002;
          author_ = other.author_;
          onChanged();
        }
        if (other.hasCover()) {
          mergeCover(other.getCover());
        }
        if (stickersBuilder_ == null) {
          if (!other.stickers_.isEmpty()) {
            if (stickers_.isEmpty()) {
              stickers_ = other.stickers_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureStickersIsMutable();
              stickers_.addAll(other.stickers_);
            }
            onChanged();
          }
        } else {
          if (!other.stickers_.isEmpty()) {
            if (stickersBuilder_.isEmpty()) {
              stickersBuilder_.dispose();
              stickersBuilder_ = null;
              stickers_ = other.stickers_;
              bitField0_ = (bitField0_ & ~0x00000008);
              stickersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStickersFieldBuilder() : null;
            } else {
              stickersBuilder_.addAllMessages(other.stickers_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string title = 1;
      private java.lang.Object title_ = "";
      /**
       * <code>optional string title = 1;</code>
       */
      public boolean hasTitle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string title = 1;</code>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string title = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string title = 1;</code>
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 1;</code>
       */
      public Builder clearTitle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 1;</code>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        title_ = value;
        onChanged();
        return this;
      }

      // optional string author = 2;
      private java.lang.Object author_ = "";
      /**
       * <code>optional string author = 2;</code>
       */
      public boolean hasAuthor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string author = 2;</code>
       */
      public java.lang.String getAuthor() {
        java.lang.Object ref = author_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          author_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string author = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAuthorBytes() {
        java.lang.Object ref = author_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          author_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string author = 2;</code>
       */
      public Builder setAuthor(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        author_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string author = 2;</code>
       */
      public Builder clearAuthor() {
        bitField0_ = (bitField0_ & ~0x00000002);
        author_ = getDefaultInstance().getAuthor();
        onChanged();
        return this;
      }
      /**
       * <code>optional string author = 2;</code>
       */
      public Builder setAuthorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        author_ = value;
        onChanged();
        return this;
      }

      // optional .signalservice.Pack.Sticker cover = 3;
      private org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker cover_ = org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker, org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.Builder, org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.StickerOrBuilder> coverBuilder_;
      /**
       * <code>optional .signalservice.Pack.Sticker cover = 3;</code>
       */
      public boolean hasCover() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .signalservice.Pack.Sticker cover = 3;</code>
       */
      public org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker getCover() {
        if (coverBuilder_ == null) {
          return cover_;
        } else {
          return coverBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .signalservice.Pack.Sticker cover = 3;</code>
       */
      public Builder setCover(org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker value) {
        if (coverBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cover_ = value;
          onChanged();
        } else {
          coverBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .signalservice.Pack.Sticker cover = 3;</code>
       */
      public Builder setCover(
          org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.Builder builderForValue) {
        if (coverBuilder_ == null) {
          cover_ = builderForValue.build();
          onChanged();
        } else {
          coverBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .signalservice.Pack.Sticker cover = 3;</code>
       */
      public Builder mergeCover(org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker value) {
        if (coverBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              cover_ != org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.getDefaultInstance()) {
            cover_ =
              org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.newBuilder(cover_).mergeFrom(value).buildPartial();
          } else {
            cover_ = value;
          }
          onChanged();
        } else {
          coverBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .signalservice.Pack.Sticker cover = 3;</code>
       */
      public Builder clearCover() {
        if (coverBuilder_ == null) {
          cover_ = org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.getDefaultInstance();
          onChanged();
        } else {
          coverBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .signalservice.Pack.Sticker cover = 3;</code>
       */
      public org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.Builder getCoverBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getCoverFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .signalservice.Pack.Sticker cover = 3;</code>
       */
      public org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.StickerOrBuilder getCoverOrBuilder() {
        if (coverBuilder_ != null) {
          return coverBuilder_.getMessageOrBuilder();
        } else {
          return cover_;
        }
      }
      /**
       * <code>optional .signalservice.Pack.Sticker cover = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker, org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.Builder, org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.StickerOrBuilder> 
          getCoverFieldBuilder() {
        if (coverBuilder_ == null) {
          coverBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker, org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.Builder, org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.StickerOrBuilder>(
                  cover_,
                  getParentForChildren(),
                  isClean());
          cover_ = null;
        }
        return coverBuilder_;
      }

      // repeated .signalservice.Pack.Sticker stickers = 4;
      private java.util.List<org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker> stickers_ =
        java.util.Collections.emptyList();
      private void ensureStickersIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          stickers_ = new java.util.ArrayList<org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker>(stickers_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker, org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.Builder, org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.StickerOrBuilder> stickersBuilder_;

      /**
       * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
       */
      public java.util.List<org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker> getStickersList() {
        if (stickersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stickers_);
        } else {
          return stickersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
       */
      public int getStickersCount() {
        if (stickersBuilder_ == null) {
          return stickers_.size();
        } else {
          return stickersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
       */
      public org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker getStickers(int index) {
        if (stickersBuilder_ == null) {
          return stickers_.get(index);
        } else {
          return stickersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
       */
      public Builder setStickers(
          int index, org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker value) {
        if (stickersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStickersIsMutable();
          stickers_.set(index, value);
          onChanged();
        } else {
          stickersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
       */
      public Builder setStickers(
          int index, org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.Builder builderForValue) {
        if (stickersBuilder_ == null) {
          ensureStickersIsMutable();
          stickers_.set(index, builderForValue.build());
          onChanged();
        } else {
          stickersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
       */
      public Builder addStickers(org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker value) {
        if (stickersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStickersIsMutable();
          stickers_.add(value);
          onChanged();
        } else {
          stickersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
       */
      public Builder addStickers(
          int index, org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker value) {
        if (stickersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStickersIsMutable();
          stickers_.add(index, value);
          onChanged();
        } else {
          stickersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
       */
      public Builder addStickers(
          org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.Builder builderForValue) {
        if (stickersBuilder_ == null) {
          ensureStickersIsMutable();
          stickers_.add(builderForValue.build());
          onChanged();
        } else {
          stickersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
       */
      public Builder addStickers(
          int index, org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.Builder builderForValue) {
        if (stickersBuilder_ == null) {
          ensureStickersIsMutable();
          stickers_.add(index, builderForValue.build());
          onChanged();
        } else {
          stickersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
       */
      public Builder addAllStickers(
          java.lang.Iterable<? extends org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker> values) {
        if (stickersBuilder_ == null) {
          ensureStickersIsMutable();
          super.addAll(values, stickers_);
          onChanged();
        } else {
          stickersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
       */
      public Builder clearStickers() {
        if (stickersBuilder_ == null) {
          stickers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          stickersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
       */
      public Builder removeStickers(int index) {
        if (stickersBuilder_ == null) {
          ensureStickersIsMutable();
          stickers_.remove(index);
          onChanged();
        } else {
          stickersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
       */
      public org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.Builder getStickersBuilder(
          int index) {
        return getStickersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
       */
      public org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.StickerOrBuilder getStickersOrBuilder(
          int index) {
        if (stickersBuilder_ == null) {
          return stickers_.get(index);  } else {
          return stickersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
       */
      public java.util.List<? extends org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.StickerOrBuilder> 
           getStickersOrBuilderList() {
        if (stickersBuilder_ != null) {
          return stickersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stickers_);
        }
      }
      /**
       * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
       */
      public org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.Builder addStickersBuilder() {
        return getStickersFieldBuilder().addBuilder(
            org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.getDefaultInstance());
      }
      /**
       * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
       */
      public org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.Builder addStickersBuilder(
          int index) {
        return getStickersFieldBuilder().addBuilder(
            index, org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.getDefaultInstance());
      }
      /**
       * <code>repeated .signalservice.Pack.Sticker stickers = 4;</code>
       */
      public java.util.List<org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.Builder> 
           getStickersBuilderList() {
        return getStickersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker, org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.Builder, org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.StickerOrBuilder> 
          getStickersFieldBuilder() {
        if (stickersBuilder_ == null) {
          stickersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker, org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.Sticker.Builder, org.whispersystems.signalservice.internal.sticker.StickerProtos.Pack.StickerOrBuilder>(
                  stickers_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          stickers_ = null;
        }
        return stickersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:signalservice.Pack)
    }

    static {
      defaultInstance = new Pack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:signalservice.Pack)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_signalservice_Pack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_signalservice_Pack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_signalservice_Pack_Sticker_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_signalservice_Pack_Sticker_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026StickerResources.proto\022\rsignalservice\"" +
      "\246\001\n\004Pack\022\r\n\005title\030\001 \001(\t\022\016\n\006author\030\002 \001(\t\022" +
      "*\n\005cover\030\003 \001(\0132\033.signalservice.Pack.Stic" +
      "ker\022-\n\010stickers\030\004 \003(\0132\033.signalservice.Pa" +
      "ck.Sticker\032$\n\007Sticker\022\n\n\002id\030\001 \001(\r\022\r\n\005emo" +
      "ji\030\002 \001(\tBB\n1org.whispersystems.signalser" +
      "vice.internal.stickerB\rStickerProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_signalservice_Pack_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_signalservice_Pack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_signalservice_Pack_descriptor,
              new java.lang.String[] { "Title", "Author", "Cover", "Stickers", });
          internal_static_signalservice_Pack_Sticker_descriptor =
            internal_static_signalservice_Pack_descriptor.getNestedTypes().get(0);
          internal_static_signalservice_Pack_Sticker_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_signalservice_Pack_Sticker_descriptor,
              new java.lang.String[] { "Id", "Emoji", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
