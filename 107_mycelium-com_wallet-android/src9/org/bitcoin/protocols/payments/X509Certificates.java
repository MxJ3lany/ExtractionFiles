// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./paymentrequest.proto
package org.bitcoin.protocols.payments;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import okio.ByteString;

import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.BYTES;
import static com.squareup.wire.Message.Label.REPEATED;

public final class X509Certificates extends Message {
  private static final long serialVersionUID = 0L;

  public static final List<ByteString> DEFAULT_CERTIFICATE = Collections.emptyList();

  @ProtoField(tag = 1, type = BYTES, label = REPEATED)
  public final List<ByteString> certificate;

  public X509Certificates(List<ByteString> certificate) {
    this.certificate = immutableCopyOf(certificate);
  }

  private X509Certificates(Builder builder) {
    this(builder.certificate);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof X509Certificates)) return false;
    return equals(certificate, ((X509Certificates) other).certificate);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    return result != 0 ? result : (hashCode = certificate != null ? certificate.hashCode() : 1);
  }

  public static final class Builder extends Message.Builder<X509Certificates> {

    public List<ByteString> certificate;

    public Builder() {
    }

    public Builder(X509Certificates message) {
      super(message);
      if (message == null) return;
      this.certificate = copyOf(message.certificate);
    }

    public Builder certificate(List<ByteString> certificate) {
      this.certificate = checkForNulls(certificate);
      return this;
    }

    @Override
    public X509Certificates build() {
      return new X509Certificates(this);
    }
  }
}
