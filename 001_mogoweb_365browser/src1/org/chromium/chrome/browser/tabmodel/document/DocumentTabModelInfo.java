// Generated by the protocol buffer compiler.  DO NOT EDIT!

package org.chromium.chrome.browser.tabmodel.document;

@SuppressWarnings("hiding")
public interface DocumentTabModelInfo {

  public static final class DocumentEntry extends
      com.google.protobuf.nano.ExtendableMessageNano<DocumentEntry> {

    private static volatile DocumentEntry[] _emptyArray;
    public static DocumentEntry[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new DocumentEntry[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional bool can_go_back = 4;
    public java.lang.Boolean canGoBack;

    // required int32 tab_id = 5;
    public java.lang.Integer tabId;

    // optional bool is_covered_by_child_activity = 6;
    public java.lang.Boolean isCoveredByChildActivity;

    public DocumentEntry() {
      clear();
    }

    public DocumentEntry clear() {
      canGoBack = null;
      tabId = null;
      isCoveredByChildActivity = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.canGoBack != null) {
        output.writeBool(4, this.canGoBack);
      }
      output.writeInt32(5, this.tabId);
      if (this.isCoveredByChildActivity != null) {
        output.writeBool(6, this.isCoveredByChildActivity);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.canGoBack != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(4, this.canGoBack);
      }
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(5, this.tabId);
      if (this.isCoveredByChildActivity != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(6, this.isCoveredByChildActivity);
      }
      return size;
    }

    @Override
    public DocumentEntry mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 32: {
            this.canGoBack = input.readBool();
            break;
          }
          case 40: {
            this.tabId = input.readInt32();
            break;
          }
          case 48: {
            this.isCoveredByChildActivity = input.readBool();
            break;
          }
        }
      }
    }

    public static DocumentEntry parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new DocumentEntry(), data);
    }

    public static DocumentEntry parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new DocumentEntry().mergeFrom(input);
    }
  }

  public static final class DocumentList extends
      com.google.protobuf.nano.ExtendableMessageNano<DocumentList> {

    private static volatile DocumentList[] _emptyArray;
    public static DocumentList[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new DocumentList[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .org.chromium.chrome.browser.tabmodel.document.DocumentEntry entries = 1;
    public org.chromium.chrome.browser.tabmodel.document.DocumentTabModelInfo.DocumentEntry[] entries;

    public DocumentList() {
      clear();
    }

    public DocumentList clear() {
      entries = org.chromium.chrome.browser.tabmodel.document.DocumentTabModelInfo.DocumentEntry.emptyArray();
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.entries != null && this.entries.length > 0) {
        for (int i = 0; i < this.entries.length; i++) {
          org.chromium.chrome.browser.tabmodel.document.DocumentTabModelInfo.DocumentEntry element = this.entries[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.entries != null && this.entries.length > 0) {
        for (int i = 0; i < this.entries.length; i++) {
          org.chromium.chrome.browser.tabmodel.document.DocumentTabModelInfo.DocumentEntry element = this.entries[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }

    @Override
    public DocumentList mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.entries == null ? 0 : this.entries.length;
            org.chromium.chrome.browser.tabmodel.document.DocumentTabModelInfo.DocumentEntry[] newArray =
                new org.chromium.chrome.browser.tabmodel.document.DocumentTabModelInfo.DocumentEntry[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.entries, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new org.chromium.chrome.browser.tabmodel.document.DocumentTabModelInfo.DocumentEntry();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new org.chromium.chrome.browser.tabmodel.document.DocumentTabModelInfo.DocumentEntry();
            input.readMessage(newArray[i]);
            this.entries = newArray;
            break;
          }
        }
      }
    }

    public static DocumentList parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new DocumentList(), data);
    }

    public static DocumentList parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new DocumentList().mergeFrom(input);
    }
  }
}
